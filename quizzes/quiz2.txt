Quiz #2

Q: How do you scale an object relative to it's own origin?
A: The scale operation usually acts relative to the world origin, we need to translate the object to the world origin, apply the scale operation and then translate it back to it's position.

Q: How does the vertex shader compute the position of a point on the screen?
A: The shader multiplies the model, view and projection matrices with the point's position.

Q: How do you define the camera's position?
A: OpenGL provides a function called lookAt which takes 3 parameters: The position of the camera, the target or center of the view and the up direction. That's how we get our view matrix.

Q: How do you define the projection matrix?
The projection can be orthogonal or perspective. The perspective projection matrix is usually specified through four parameters: field of view, aspect ratio, near and far. Where near and far represent the positions of the near and far clipping planes.

Q: How do you find the center of a set of points?
A: Loop throught the points and get the min and max value for each coordinate x, y and z. Take the average of the two points and you get the center.

Q: How do you translate an object?
A: Loop through each point and add the translate vector.

Q: How do you rotate a point?
A: GLM has a rotate function which takes as parameters a model, an angle in radians and the rotation axis. You can translate the object to origin to apply the rotation and then bring it back.

Q: How do you scale an object?
A: Loop through each point and multiply by the scale factor in x, y and z.

Q: How do I define the geometry of my object?
A: The geometry is usually defined in triangles. With OpenGL we can use Immediate Mode where we call functions to draw each vertex. Or we can use the Vertex Buffer Object where we have an array of vertices and an array of indices to specify the order on which we draw the vertices. You should render your triangles in counter-clockwise order for them to be visible or clockwise for them to be hidden. We can also define normals, colors and texture coordinates.

Q: How do I get the angle between two vectors?
A: With the dot product.

Q: How do I the vector perpendicular to two other vectors?
A: With the cross product.

Q: How do I pick objects with the mouse?
A: GLM has a function called unProject where you input the mouse position and the viewport. You get two points that cast a ray from your mouse to the scene. With the function closestPointOnLine you can see which point is closer to your mouse cursor.